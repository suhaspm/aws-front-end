name: Deploy Frontend to EC2

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Frontend Dependencies
      run: npm install
      working-directory: ./front-end

    - name: Build Frontend for Production
      run: npm run build
      working-directory: ./front-end

    - name: Archive Frontend Folder
      run: zip -r front-end.zip front-end -x 'front-end/.git*'
    
    - name: Copy zip to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./front-end"
        target: "/front-end.zip"

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./front-end"
        target: "/home/ec2-user"
        script: |
          set -e # Exit immediately if a command exits with a non-zero status.

          echo "Stopping and removing old frontend container..."
          docker stop front-end || true
          docker rm front-end || true

          echo "Cleaning up old frontend deployment artifacts..."
          # Forcefully remove previous app folder
          sudo rm -rf /home/ec2-user/front-end || true
          echo "Listing files..."
          ls
          unzip front-end
          cd front-end
      #     # Forcefully remove the temporary transfer directory created by ssh-action
      #     sudo rm -rf /home/ec2-user/front-end-tmp-dir || true

      #     echo "Moving and setting up new front end code..."
      #     mv /home/ec2-user/front-end-tmp-dir /home/ec2-user/front-end

      #     echo "Building new Docker image..."
      #     cd /home/ec2-user/front-end
      #     docker build -t front-end .

      #     echo "Running new docker container..."
      #     docker run -d --name front-end -p 3000:80 front-end